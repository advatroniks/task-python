version: "3.9"

services:
  api_application:
    build:
      context: .
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_PASS=postgres
      - DB_NAME=postgres
      - DB_USER=postgres
    container_name: api_application
    restart: unless-stopped
    hostname: api_application
    ports:
      - "8080:80"
    depends_on:
      - migrations
    networks:
      - test_task_network

  db:
    image: postgres:alpine3.18
    container_name: db
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "9090:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql/extension.sql:/docker-entrypoint-initdb.d/extension.sql
    networks:
      - test_task_network

  migrations:
    build:
      context: .
      dockerfile: migration.Dockerfile
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_PASS=postgres
      - DB_NAME=postgres
      - DB_USER=postgres
    command: "sh -c 'alembic upgrade head'"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - test_task_network

networks:
  test_task_network:
    driver: bridge
    name: test_task_network

volumes:
  postgres-data:
